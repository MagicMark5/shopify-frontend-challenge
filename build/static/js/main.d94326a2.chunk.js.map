{"version":3,"sources":["styles/theShoppiesTitle.js","styles/movieFormStyle.js","components/MovieForm.jsx","styles/movieResultsStyle.js","components/MoviePopover.jsx","helpers/parseListItems.js","components/MovieResults.jsx","components/Nominations.jsx","App.jsx","helpers/removeDuplicates.js","reportWebVitals.js","index.js"],"names":["makeStyles","theme","root","flexGrow","maxWidth","background","backgroundColor","title","margin","spacing","padding","display","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","marginRight","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","transition","transitions","create","down","sectionDesktop","sectionMobile","MovieForm","props","useState","movie","setMovie","classes","className","onSubmit","event","preventDefault","handleSubmitAction","trim","autoComplete","InputBase","name","value","onChange","target","length","placeholder","input","inputProps","useStyles","typography","info","MoviePopover","year","poster","imdbID","anchorEl","setAnchorEl","handleClose","open","Boolean","id","undefined","aria-describedby","variant","onClick","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","CardMedia","component","alt","src","Typography","parseListItems","clickHandler","isNomination","currentNominations","fiveSelected","Title","Year","Poster","movieData","movieString","JSON","stringify","isButtonDisabled","includes","iconClass","avatarStyle","ListItem","ListItemAvatar","Avatar","style","Icon","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","disabled","data-testid","MovieResults","movieList","handleNominateAction","showTip","validatedMovies","Array","isArray","resultHeading","query","nominateMovie","offsetParent","parsedMovies","map","List","Nominations","removeNomination","headingText","handleRemoveNomination","updatedNoms","filter","nom","parsedNominations","nomination","parse","useEffect","localStorage","setItem","App","prevNominations","getItem","currentMovie","setCurrentMovie","currentResults","setCurrentResults","setNominations","showBanner","axios","post","then","res","uniqueResults","array","uniqueStrings","forEach","item","itemString","push","removeDuplicates","data","Search","catch","e","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAEeA,eAAW,SAACC,GAAD,MAAY,CACpCC,KAAM,CACJC,SAAU,EACVC,SAAU,KAEZC,WAAY,CACVC,gBAAiB,WAEnBC,MAAO,CACLC,OAAQP,EAAMQ,QAAQ,EAAG,EAAG,GAC5BC,QAAST,EAAMQ,QAAQ,EAAG,EAAG,Q,kDCVlBT,eAAW,SAACC,GAAD,MAAY,CACpCM,MAAM,aACJI,QAAS,QACRV,EAAMW,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGbG,OAAO,aACLC,SAAU,WACVC,aAAcf,EAAMgB,MAAMD,aAC1BV,gBAAiBY,YAAKjB,EAAMkB,QAAQC,OAAOC,MAAO,KAClD,UAAW,CACTf,gBAAiBY,YAAKjB,EAAMkB,QAAQC,OAAOC,MAAO,MAEpDC,WAAYrB,EAAMQ,QAAQ,GAC1Bc,YAAatB,EAAMQ,QAAQ,GAC3Be,MAAO,QACNvB,EAAMW,YAAYC,GAAG,MAAQ,CAC5BW,MAAO,QAGXC,WAAY,CACVf,QAAST,EAAMQ,QAAQ,EAAG,GAC1BiB,OAAQ,OACRX,SAAU,WACVY,cAAe,OACfhB,QAAS,OACTiB,WAAY,SACZC,eAAgB,cAElBC,UAAW,CACTC,MAAO,UACPP,MAAO,OAETQ,WAAW,aACTtB,QAAST,EAAMQ,QAAQ,EAAG,EAAG,EAAG,GAEhCwB,WAAYhC,EAAMiC,YAAYC,OAAO,SACrCX,MAAO,OACPE,OAAQ,QACPzB,EAAMW,YAAYwB,KAAK,MAAQ,CAC9Bd,WAAY,QAGhBe,eAAe,aACb1B,QAAS,QACRV,EAAMW,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,SAGb2B,cAAc,aACZ3B,QAAS,QACRV,EAAMW,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,a,OCjDA,SAAS4B,EAAUC,GAChC,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAGMC,EAAU5C,IAiBhB,OACE,sBAAK6C,UAAWD,EAAQ9B,OAAxB,UACE,qBAAK+B,UAAWD,EAAQnB,WAAxB,SACE,cAAC,IAAD,MAEF,sBAAMqB,SApBW,SAACC,GACpBA,EAAMC,iBAENR,EAAMS,mBAAmBP,EAAMQ,QAE/BP,EAAS,KAeuBQ,aAAa,MAA3C,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,MAAOZ,EACPa,SAhBa,SAAAR,GACnB,IAAMO,EAAQP,EAAMS,OAAOF,MACvBA,EAAMG,QAAU,KAClBd,EAASW,IAcLI,YAAY,yBACZd,QAAS,CACP1C,KAAM0C,EAAQd,UACd6B,MAAOf,EAAQZ,YAEjB4B,WAAY,CACV,aAAc,SACd,cAAe,iB,YC1CZ5D,eAAW,SAACC,GAAD,MAAY,CACpCC,KAAM,CACJC,SAAU,EACVC,SAAU,KAEZC,WAAY,CACVC,gBAAiB,WAEnBC,MAAO,CACLC,OAAQP,EAAMQ,QAAQ,EAAG,EAAG,Q,kGCJ1BoD,EAAY7D,aAAW,SAACC,GAAD,MAAY,CACvC6D,WAAY,CACVpD,QAAST,EAAMQ,QAAQ,IAEzBsD,KAAM,CACJvD,OAAQP,EAAMQ,QAAQ,QAIX,SAASuD,EAAaxB,GAEnC,IAAQjC,EAAgCiC,EAAhCjC,MAAO0D,EAAyBzB,EAAzByB,KAAMC,EAAmB1B,EAAnB0B,OAAQC,EAAW3B,EAAX2B,OAEvBvB,EAAUiB,IAChB,EAAgCpB,mBAAS,MAAzC,mBAAO2B,EAAP,KAAiBC,EAAjB,KAMMC,EAAc,WAClBD,EAAY,OAGRE,EAAOC,QAAQJ,GACfK,EAAKF,EAAOJ,OAASO,EAE3B,OACE,qCACE,cAAC,IAAD,CACE7B,UAAWD,EAAQmB,KACnBY,mBAAkBF,EAClBG,QAAQ,YACR7C,MAAM,SACN8C,QAlBc,SAAC9B,GACnBsB,EAAYtB,EAAM+B,kBAmBhB,eAACC,EAAA,EAAD,CACEN,GAAIA,EACJF,KAAMA,EACNH,SAAUA,EACVY,QAASV,EACTO,QAASP,EACTW,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,UAZhB,UAeE,cAACE,EAAA,EAAD,CACEC,UAAU,MACVC,IAAKhF,EACLmB,OAAO,MACP8D,IAAKtB,EACL3D,MAAOA,IAET,eAACkF,EAAA,EAAD,CAAY5C,UAAWD,EAAQkB,WAA/B,UACGvD,EADH,KACY0D,EADZ,aCxDO,SAASyB,EAAehD,EAAOiD,EAAcC,GAAsD,IAAxCC,EAAuC,uDAAlB,GAAIC,EAAc,uCACvGC,EAAgCrD,EAAhCqD,MAAOC,EAAyBtD,EAAzBsD,KAAMC,EAAmBvD,EAAnBuD,OAAQ9B,EAAWzB,EAAXyB,OACvB+B,EAAY,CAAEH,QAAOC,OAAMC,UAC3BE,EAAcC,KAAKC,UAAUH,GAC7BI,KAAmBR,IAAgBD,EAAmBU,SAASJ,IAC/DK,EAAYZ,EAAe,eAAiB,gBAE5Ca,EAAc,CAClB/E,OAAQ,OACRF,MAAO,OACPD,YAAa,OAGf,OAAQ,eAACmF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQpB,IAAKS,EAAQY,MAAOJ,EAA5B,SACE,cAACK,EAAA,EAAD,CAAMjE,UAAU,oBAGpB,cAACkE,EAAA,EAAD,CAAcC,QAAO,UAAKjB,EAAL,aAAeC,EAAf,OACrB,cAAChC,EAAD,CACEzD,MAAOwF,EACP9B,KAAM+B,EACN9B,OAAQ+B,EACR9B,OAAQA,IAEV,cAAC8C,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,MACLC,aAAW,MACXC,SAAUf,EACVjD,KAAM8C,EACNmB,cAAY,cACZzC,QAASc,EANX,SAOE,cAACmB,EAAA,EAAD,CAAMjE,UAAW2D,EAAWnD,KAAM8C,UArBxC,UAAkBJ,EAAlB,aAA4BC,EAA5B,cAAsC7B,EAAtC,M,aChBK,SAASoD,EAAa/E,GACnC,IAAMI,EAAU5C,IACRwH,EAAwDhF,EAAxDgF,UAAW3B,EAA6CrD,EAA7CqD,mBAAoB4B,EAAyBjF,EAAzBiF,qBACjC3B,EAA6C,IAA9BD,EAAmBpC,OAClCiE,EAA+B,IAArBF,EAAU/D,OAEpBkE,EAAkBC,MAAMC,QAAQL,GAAaA,EAAY,GAGzDM,EAAgBH,EAAgBlE,OAAS,EAAzB,uBAA6CjB,EAAMuF,MAAnD,+BAAiFvF,EAAMuF,MAAvF,gDAGhBC,EAAgB,SAACjF,GAErB,IAAML,EAAQK,EAAMS,OAAOH,KAAON,EAAMS,OAAOH,KAAON,EAAMS,OAAOyE,aAAa5E,KAChFoE,EAAqB,GAAD,mBAAK5B,GAAL,CAAyBnD,MAIzCwF,EAAeP,EAClBQ,KAAI,SAAAzF,GAAK,OAAIgD,EAAehD,EAAOsF,GAAe,EAAOnC,EAAoBC,MAEhF,OACE,0BAASjD,UAAU,UAAnB,UACE,cAAC4C,EAAA,EAAD,CAAYb,QAAQ,KAAK/B,UAAWD,EAAQrC,MAA5C,SAAoDuH,IACnDJ,GAAW,cAACjC,EAAA,EAAD,CAAYb,QAAQ,KAAK/B,UAAWD,EAAQrC,MAA5C,uEAGZ,qBAAKsC,UAAWD,EAAQvC,WAAxB,SACE,cAAC+H,EAAA,EAAD,UACGF,SC9BI,SAASG,EAAY7F,GAClC,IAAMI,EAAU5C,IACR6F,EAAyCrD,EAAzCqD,mBAAoByC,EAAqB9F,EAArB8F,iBACtBC,EAA4C,IAA9B1C,EAAmBpC,OAAnB,wCACdiE,EAAwC,IAA9B7B,EAAmBpC,OAE7B+E,EAAyB,SAACzF,GAE9B,IAAML,EAAQK,EAAMS,OAAOH,KAAON,EAAMS,OAAOH,KAAON,EAAMS,OAAOyE,aAAa5E,KAE1EoF,EADe,YAAO5C,GACQ6C,QAAO,SAAAC,GAAG,OAAIA,IAAQjG,KAC1D4F,EAAiB,YAAIG,KAIjBG,EAAoB/C,EAAmBsC,KAAI,SAACU,GAEhD,OAAOnD,EADWU,KAAK0C,MAAMD,GACIL,GAAwB,MAS3D,OANAO,qBAAU,WAERC,aAAaC,QAAQ,cAAe7C,KAAKC,UAAUR,MAClD,CAACA,IAIF,0BAAShD,UAAU,cAAnB,UACE,cAAC4C,EAAA,EAAD,CAAYb,QAAQ,KAAK/B,UAAWD,EAAQrC,MAA5C,SACGgI,IAEFb,GAAW,cAACjC,EAAA,EAAD,CAAYb,QAAQ,KAAK/B,UAAWD,EAAQrC,MAA5C,6EAGZ,cAAC6H,EAAA,EAAD,UACGQ,OCoBMM,MAnDf,WAEE,IAAMC,EAAkB/C,KAAK0C,MAAME,aAAaI,QAAQ,gBAAkB,IACpExG,EAAU5C,IAChB,EAAwCyC,mBAAS,IAAjD,mBAAO4G,EAAP,KAAqBC,EAArB,KACA,EAA4C7G,mBAAS,IAArD,mBAAO8G,EAAP,KAAuBC,EAAvB,KACA,EAA6C/G,mBAAS0G,GAAtD,mBAAOtD,EAAP,KAA2B4D,EAA3B,KACMC,EAA2C,IAA9B7D,EAAmBpC,OAmBtC,OAjBAsF,qBAAU,WACJM,GAEFM,IAAMC,KAAK,cAAe,CAAElH,MAAO2G,IAClCQ,MAAK,SAAAC,GACJ,IACMC,ECzBC,SAA0BC,GACvC,IAAMC,EAAgB,GAChBF,EAAgB,GAatB,OAXAC,EAAME,SAAQ,SAACC,GAEb,IAAMC,EAAahE,KAAKC,UAAU8D,GAE7BF,EAAc1D,SAAS6D,KAC1BH,EAAcI,KAAKD,GACnBL,EAAcM,KAAKF,OAKhBJ,EDUqBO,CADHR,EAAIS,KAAKC,OAASV,EAAIS,KAAKC,OAAS,IAEvDhB,EAAkBO,MAEnBU,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZpB,EAAgB,WAInB,CAACD,IAGF,sBAAKxG,UAAU,MAAf,UACE,cAAC4C,EAAA,EAAD,CAAYb,QAAQ,KAAK/B,UAAWD,EAAQrC,MAA5C,0BAGA,yBAASsC,UAAU,YAAnB,SACE,cAACN,EAAD,CAAWU,mBAAoBqG,MAEhCI,GAAc,yBAAS7G,UAAU,SAAnB,yDACf,0BAASA,UAAU,sBAAnB,UACE,cAAC0E,EAAD,CACEC,UAAW+B,EACXxB,MAAOsB,EACPxD,mBAAoBA,EACpB4B,qBAAsBgC,IAExB,cAACpB,EAAD,CACExC,mBAAoBA,EACpByC,iBAAkBmB,WE1CboB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d94326a2.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 752,\n  },\n  background: {\n    backgroundColor: \"inherit\"\n  },\n  title: {\n    margin: theme.spacing(4, 2, 1),\n    padding: theme.spacing(3, 2, 1)\n  },\n}));\n\n","import { fade, makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '60%'\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 1),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '85%'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    height: '20px',\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: '1em'\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\n","import { useState } from 'react'\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport makeStyles from '../styles/movieFormStyle';\n\n\nexport default function MovieForm(props) {\n  const [movie, setMovie] = useState(\"\");\n\n  // material-ui\n  const classes = makeStyles();\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    // pass query string to App as movie \n    props.handleSubmitAction(movie.trim())\n    // reset input\n    setMovie(\"\")\n  }\n\n  const handleChange = event => {\n    const value = event.target.value\n    if (value.length <= 100) {\n      setMovie(value)\n    }\n  }\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <InputBase\n          name=\"movie\"\n          value={movie}\n          onChange={handleChange}\n          placeholder=\"Enter a movie title...\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          inputProps={{ \n            'aria-label': 'search', \n            'data-testid': 'search' \n          }}\n        />\n      </form>\n    </div>\n  )\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 752,\n  },\n  background: {\n    backgroundColor: \"inherit\"\n  },\n  title: {\n    margin: theme.spacing(4, 2, 2),\n  },\n}));\n\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2)\n  },\n  info: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function MoviePopover(props) {\n\n  const { title, year, poster, imdbID } = props;\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? imdbID : undefined;\n\n  return (\n    <>\n      <InfoIcon \n        className={classes.info} \n        aria-describedby={id} \n        variant=\"contained\" \n        color=\"action\" \n        onClick={handleClick} \n      />\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        onClick={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <CardMedia \n          component=\"img\"\n          alt={title}\n          height=\"450\"\n          src={poster}\n          title={title}\n        />\n        <Typography className={classes.typography}>\n          {title} ({year})\n        </Typography>\n      </Popover>\n    </>\n  );\n};","import ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport MoviePopover from '../components/MoviePopover';\n\nexport default function parseListItems(movie, clickHandler, isNomination, currentNominations = [], fiveSelected) {\n  const { Title, Year, Poster, imdbID } = movie;\n  const movieData = { Title, Year, Poster }\n  const movieString = JSON.stringify(movieData);\n  const isButtonDisabled = fiveSelected || currentNominations.includes(movieString) ? true : false;\n  const iconClass = isNomination ? \"fas fa-trash\" : \"fas fa-trophy\";\n\n  const avatarStyle = {\n    height: '60px',\n    width: '60px',\n    marginRight: '1em'\n  }\n\n  return (<ListItem key={`${Title} (${Year}) [${imdbID}]`}>\n            <ListItemAvatar>\n              <Avatar src={Poster} style={avatarStyle}>\n                <Icon className=\"fas fa-film\" />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={`${Title} (${Year})`}/>\n            <MoviePopover \n              title={Title}\n              year={Year}\n              poster={Poster}\n              imdbID={imdbID}\n              />\n            <ListItemSecondaryAction>\n              <IconButton \n                edge=\"end\" \n                aria-label=\"add\"\n                disabled={isButtonDisabled}\n                name={movieString} \n                data-testid=\"nominateBtn\" \n                onClick={clickHandler}>\n                <Icon className={iconClass} name={movieString}/>\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>);\n}","import makeStyles from \"../styles/movieResultsStyle\";\nimport parseListItems from \"../helpers/parseListItems\";\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\n\n\nexport default function MovieResults(props) {\n  const classes = makeStyles();\n  const { movieList, currentNominations, handleNominateAction } = props\n  const fiveSelected = currentNominations.length === 5 ? true : false;\n  const showTip = movieList.length === 0 ? true : false;\n  \n  const validatedMovies = Array.isArray(movieList) ? movieList : [];\n\n  // Conditionally render results heading\n  const resultHeading = validatedMovies.length > 0 ? `Results for \"${props.query}\"` : `No Results for \"${props.query}\" 🤷🏽‍♂️` \n\n  // The onClick handler for each nominate movie IconButton \n  const nominateMovie = (event) => {\n    // get movie data from name prop of whichever element was clicked (either button or icon)\n    const movie = event.target.name ? event.target.name : event.target.offsetParent.name;\n    handleNominateAction([...currentNominations, movie]);\n  }\n\n  // parse movies and conditionally enable buttons and button icon (false = trophy)\n  const parsedMovies = validatedMovies\n    .map(movie => parseListItems(movie, nominateMovie, false, currentNominations, fiveSelected));\n  \n  return (\n    <section className=\"results\">\n      <Typography variant=\"h5\" className={classes.title}>{resultHeading}</Typography>\n      {showTip && <Typography variant=\"h6\" className={classes.title}>\n        Enter a movie title into the search bar to see some films\n        </Typography>}\n      <div className={classes.background}>\n        <List>\n          {parsedMovies}\n        </List>\n      </div>\n    </section>\n  )\n}","import { useEffect } from 'react'\nimport parseListItems from \"../helpers/parseListItems\";\nimport makeStyles from \"../styles/movieResultsStyle\";\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\n\nexport default function Nominations(props) {\n  const classes = makeStyles();\n  const { currentNominations, removeNomination } = props\n  const headingText = currentNominations.length === 0 ? `You have no nominations` : `Nominations`;\n  const showTip = currentNominations.length === 0 ? true : false;\n\n  const handleRemoveNomination = (event) => {\n    // get movie data from name prop of whichever element was clicked (either button or icon)\n    const movie = event.target.name ? event.target.name : event.target.offsetParent.name;\n    const copyNominations = [...currentNominations];\n    const updatedNoms = copyNominations.filter(nom => nom !== movie)\n    removeNomination([...updatedNoms]);\n  }  \n  \n  // parse nomination and conditional button icon (true = trash can)\n  const parsedNominations = currentNominations.map((nomination) => {\n    const movieData = JSON.parse(nomination);\n    return parseListItems(movieData, handleRemoveNomination, true);\n  });\n\n  useEffect(() => {\n    // Save currentNominations to local storage on each change\n    localStorage.setItem(\"nominations\", JSON.stringify(currentNominations));\n  }, [currentNominations]);\n  \n  \n  return (\n    <section className=\"nominations\">\n      <Typography variant=\"h5\" className={classes.title}>\n        {headingText}\n      </Typography>\n      {showTip && <Typography variant=\"h6\" className={classes.title}>\n        Click the trophy icon from the movie results to nominate a film\n        </Typography>}\n      <List>\n        {parsedNominations}\n      </List>\n    </section>\n  )\n}","import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport './App.scss';\nimport makeStyles from \"./styles/theShoppiesTitle\";\nimport Typography from '@material-ui/core/Typography';\nimport MovieForm from './components/MovieForm';\nimport MovieResults from './components/MovieResults';\nimport Nominations from './components/Nominations';\nimport removeDuplicates from './helpers/removeDuplicates';\n\nfunction App() {\n  // set initial state of currentNominations with local storage\n  const prevNominations = JSON.parse(localStorage.getItem('nominations') || []);\n  const classes = makeStyles();\n  const [currentMovie, setCurrentMovie] = useState(\"\")\n  const [currentResults, setCurrentResults] = useState([])\n  const [currentNominations, setNominations] = useState(prevNominations)\n  const showBanner = currentNominations.length === 5 ? true : false;\n  \n  useEffect(() => {\n    if (currentMovie) {\n      // post query to shoppies-backend on App re-render\n      axios.post('/api/movies', { movie: currentMovie })\n      .then(res => {\n        const movieArray = res.data.Search ? res.data.Search : [];\n        const uniqueResults = removeDuplicates(movieArray);\n        setCurrentResults(uniqueResults);\n      })\n      .catch(e => {\n        console.log(e)\n        setCurrentMovie(null)\n      })\n    }\n\n  }, [currentMovie])\n\n  return (\n    <div className=\"App\">\n      <Typography variant=\"h2\" className={classes.title}>\n        The Shoppies\n      </Typography>\n      <section className=\"movieForm\">\n        <MovieForm handleSubmitAction={setCurrentMovie} />\n      </section>\n      {showBanner && <section className=\"banner\">You are ready for the shoppies 🏆</section>}\n      <section className=\"results-nominations\">\n        <MovieResults \n          movieList={currentResults} \n          query={currentMovie} \n          currentNominations={currentNominations}\n          handleNominateAction={setNominations}\n        />\n        <Nominations \n          currentNominations={currentNominations}\n          removeNomination={setNominations}\n        />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","export default function removeDuplicates(array) {\n  const uniqueStrings = [];\n  const uniqueResults = [];\n  \n  array.forEach((item) => {\n\n    const itemString = JSON.stringify(item);\n\n    if (!uniqueStrings.includes(itemString)) {\n      uniqueStrings.push(itemString)\n      uniqueResults.push(item);\n    }\n\n  })\n\n  return uniqueResults;\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}